install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library("swirl")
swirl
swirl()
getwd()
cube <- function(x,n) {}
x^3
cube <- function(x,n) {x^3}
cube(3)
x <- 1:10 if(x>5) {x <- 0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
x <- 2+2
attributes(x)
attributes(2+2)
help(attributes)
x <- matrix(1:6,2,3)
x
x[1,2]
x <- list(foo=1.4,bar=0.6)
x
x[1]
x <- list(foo=1:4,bar=0.6)
x
x[1]
x[[1]]
x$bar
x[c(1,3)]
x[c(1, 3)]
x <- c(1,2,3,4)
x
for(i in x)
for(i in 1:4) {print(x[i])}
complete <- function(directory,id=1:332) {
files <- list.files("specdata",full.names=TRUE)
for(i in id) {
nobs <- sum(complete.cases(read.csv(files[i])))
dat <- data.frame(id=i,nobs=nobs)
result <- lapply(dat,nobs)
}
return(result)
}
for(i in 1:4) {print(x[i])}
complete <- function(directory,id=1:332) {
files <- list.files("specdata",full.names=TRUE)
for(i in id) {
nobs <- sum(complete.cases(read.csv(files[i])))
dat <- data.frame(id=i,nobs=nobs)
result <- lapply(files,nobs)
}
return(result)
}
for(i in 1:4) {print(x[i])}
library(datasets)
data(iris)
?iris
head(iris)
iris[Species=virginica]
iris$Species="virginica"
virginica <- iris$Species="virginica"
virg <- iris$Species="virginica"
data <- iris$Species="virginica"
mean(iris$Species)
mean(iris$Sepal.Length="virginica")
mean(iris$Sepal.Length)
mean(iris$Sepal.Length) if iris$Species="virginica"
for(Species=virginica)
data <- subset(iris,Species=virginica)
head(data)
mean(data$Sepal.Length)
rowMeans(iris[,1:4])
apply(iris[,1:4])
apply(iris[,1:4],2,mean)
mean(iris$Sepal.Length)
mean(iris$Sepal.Width)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars,cyl,mean)
data(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
4cyl <- subset(mtcars,cyl=4)
Four <- subset(mtcars,cyl=4)
Eight <- subset(mtcars,cyl=8)
head(Four)
mean(Four$hp) - mean(Eight$hp)
mean(Four$hp)
mean(Eight$hp)
head(Eight)
Four <- subset(mtcars,cyl="4")
Eight <- subset(mtcars,cyl="8")
subset(mtcars,cyl=4)
subset(mtcars,cyl==4)
help(==)
four <- subset(mtcars,cyl==4)
eight <- subset(mtcars,cyl==8)
head(eight)
mean(four$hp) - mean(eight$hp)
mean(four$hp)
mean(eight$hp)
mean(eight$hp) - mean(four$hp)
dbug(ls)
debug(ls)
ls
help(ls)
clear
q()
q
library(datasets)
data(iris)
subset(iris,Species=virginica)
q
1
q
q
q
c
q
library(datasets)
datasets(iris)
dataset(iris)
data(iris)
head(iris)
names(iris$Species)
iris$Species
subset(iris,Species="virginica")
subset(iris,iris$Species="virginica")
subset(iris$Species="virginica")
iris[Species]
iris[virginica]
iris[Species=virginica]
iris[iris$Species==virginica]
iris[iris$Species=="virginica"]
class(iris$Species)
iris[[iris$Species="virginica"]]
iris[[iris$Species=="virginica"]]
iris[[iris$Species=="virginica"]]
sub <- subset(iris,Species==virginica)
sub <- subset(iris,Species=="virginica")
sub
mean(sub,Sepal.Length)
mean(sub,Sepal.Length,rm.na=TRUE)
mean(sub,Sepal.Length,na.rm=TRUE)
mean(sub,sub$Sepal.Length,na.rm=TRUE)
mean(sub,sub$Sepal.Length)
mean(sub)
sub
mean(Sepal.Length)
mean(iris$Sepal.Length)
mean(iris$Sepal.Length,na.rm=TRUE)
mean(sub$Sepal.Length,na.rm=TRUE)
ls
debug(ls)
debug(ls)
debug(ls)
read.table(P:\PROJECTS\Sustainable Investments - Siemens-533\Data\CenterPoint\2009 RECS Microdata)
read.table("P:\PROJECTS\Sustainable Investments - Siemens-533\Data\CenterPoint\2009 RECS Microdata")
setwd("P:\PROJECTS\Sustainable Investments - Siemens-533\Data\CenterPoint")
readtable("P:/PROJECTS/Sustainable Investments - Siemens-533/Data/CenterPoint/RECS Microdata")
read.table("P:/PROJECTS/Sustainable Investments - Siemens-533/Data/CenterPoint/RECS Microdata")
library("swirl")
ls
rm(list=ls())
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),time=10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
?rep
swirl()
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"Adam")
my_name
paste(my_name,collapse=" ")
paste("Hello","world",sep=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z",sep=""))
paste(1:3,c("X","Y","Z"),sep=""))
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
q()
swirl()
library("swirl")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(colnames)
colnames(my_data) <- cnames
my_data
matrix(1:10,nrows=5,ncol=2)
?matrix
matrix(1:10,nrow=5,ncol=2)
data <- matrix(1:10,nrow=5,ncol=2)
colnames(data) <- c("sulfate","nitrate")
data
?cor
cor(data$sulfate,data$nitrate)
cor(data[sulfate,],data[,nitrate])
cor(data[sulfate],data[nitrate])
cor(sulfate,nitrate)
cor("sulfate","nitrate")
mean(data$nitrate)
class(data)
data.frame(data)
class(data)
mean(data$nitrate)
summary(data)
mean(data[,nitrate])
mean(data[,"nitrate""])
mean(data[,"nitrate""])
length(data$sulfate)
class(data) <- numeric
matrix <- matrix(1:10,nrow=5,ncol=2)
class(matrix) <- numeric
class(data)
head(matrix)
matrix
class(matrix) <- numeric
head(specdata)
head("specdata")
setwd("C:/Users/Adam/Dropbox/Coursera")
head("Specdata/001.csv")
read.csv("specdata/001.csv")
data <- read.csv("specdata/001.csv")
head(data)
sum(complete.cases(data$sulfate))
cor(data$sulfate,data$nitrate)
cor(data$sulfate,data$nitrate,na.rm=TRUE)
class(data)
data(20:25)
?data.frame
data.frame(1:20)
data <- data.frame(1:10)
head(data)
colnames(data)
dim(data) <- 2,4
dim(data) <- (2,4)
dim(data) <- c(2,4)
dim(data) <- 2x4
dim(data) <- 2 X 4
dim(data) <- 2
?dim
corr <- function(directory,threshold=0) {
files <- list.files("specdata",full.names=TRUE)
dat <- data.frame()
for(i in 1:332) {
dat <- rbind(dat,read.csv(files[i]))
}
nobs <- complete.cases(dat)
cor(nobs(dat$sulfate,dat$nitrate))
}
corr("specdata",400)
